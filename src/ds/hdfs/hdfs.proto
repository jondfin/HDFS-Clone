syntax = "proto2";

package hdfs;

option java_package = "ds.hdfs";
option java_outer_classname = "hdfsProto";

//Client sends queries to Name Node
message ClientQuery{
	optional string filename = 1; //contains the filename requested, omitted if command is ls
}

//Used to send blocks to/from Data Nodes
message Block{
	required int32 blocknum = 1; //block to write to
	optional bytes data = 2; //data for block to hold
}

/*
	Flow is as follows:
	Client --Query--> NameNode --Response--> Client --Requests--> DNs --Data--> Client
	OR					 Client --Data--> DNs
*/

//Response to client requests for file
message NameNodeResponse{
	optional bytes response = 1; //Contains Data Node locations
	required int32 status = 2; //-1 for error otherwise good
}

//Response to client request for file data
message DataNodeResponse{
	optional bytes response = 1; //Contains actual data
	required int32 status = 2; //-1 for error otherwise good
}

//Persist data in the name node
message NameNodeData{
	repeated string filelist = 1; 
}

//Keep track of files and their blocks when persisting the data
message DataNodeBlocks{
	required string filename = 1;
	repeated Block block = 2;
}

//Persisted data is stored as a list of files and their data
//So file1:block1{data}, block2{data},...
message DataNodeData{
	repeated DataNodeBlocks data = 1;
}